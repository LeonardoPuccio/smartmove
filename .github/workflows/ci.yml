name: CI (lint → test → sonar)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with: { fetch-depth: 0 }
      - name: Set up Python
        uses: actions/setup-python@v6
        with: 
          python-version: '3.12'
          cache: 'pip'
      - name: Install tools
        run: |
          pip install -r requirements-dev.txt
          pip install -e .
      - name: Run pre-commit (format + lint)
        run: pre-commit run --all-files

  test:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v5
        with: { fetch-depth: 0 }
      - name: Set up Python
        uses: actions/setup-python@v6
        with: 
          python-version: '3.12'
          cache: 'pip'
      - name: Install deps
        run: |
          pip install -r requirements-dev.txt
          pip install -e .
      - name: Run tests + coverage
        run: pytest tests/ --cov=. --cov-report=xml --cov-report=html --junitxml=test-results.xml -v
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            coverage.xml
            htmlcov/
            test-results.xml

  sonar:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v5
        with: { fetch-depth: 0 }
      - name: Download coverage reports
        uses: actions/download-artifact@v5
        with:
          name: coverage-reports
      - name: SonarQube Scan
        uses: sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}